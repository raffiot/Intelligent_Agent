package template;

import logist.simulation.Vehicle;
import java.util.*;
public class CentralizedClass {
	
	HashMap<Vehicle,LinkedList<TaskClass>> nextTask;
	
	public CentralizedClass(){
		nextTask = new HashMap<Vehicle,LinkedList<TaskClass>>();
	}
	
	public void initializeVehicle(Vehicle v){
		LinkedList<TaskClass> ll = new LinkedList<TaskClass>();
		nextTask.put(v,ll);
	}
	
	public int getLoad(Vehicle v, int time){
		if(time < 1){
			System.out.println("error when calling method getLoad in CentralizedClass");
			return -1;
		}
		LinkedList<TaskClass> ll = nextTask.get(v);
		if(ll.isEmpty()){
			//There is no task assigned to this vehicle yet
			return 0;
		}
		int size = ll.size();
		if(size <= time){
			//Vehicle v has already pickup and deliver all it's task at this time
			return 0;
		}
		int load = 0;
		for(int i = 0; i< time; i++){ // <= or just < ?
			load +=ll.get(i).getWeight();
		}
		return load;
	}
	
}
